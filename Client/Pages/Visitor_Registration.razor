@page "/Visitor_registration"
@using System.Text.RegularExpressions
@using VMS_App.Shared.Models
@using VMS_App.Client.LoginService
@inject NavigationManager navigate

<MudCard Elevation="4" Outlined Class="mt-2">
     <MudCardHeader>
         <MudButton OnClick="Back" Variant="Variant.Filled"><MudIcon Icon="@Icons.Material.Filled.ArrowBack" Size="Size.Small" />Back</MudButton>
     </MudCardHeader>
     <MudCardContent>
         <MudText Typo="Typo.h5" Color="Color.Default" Style="text-align:center; font-family:Arial">Visitor Registration</MudText>
         <MudDivider Light DividerType="DividerType.Middle" Class="m-2 mb-5" />
         <MudForm @ref="form">
             <MudGrid Spacing="2">
                 <MudItem xs="12" sm="12" md="12" lg="12">
                     <MudText><b>Gernal Information :</b></MudText>
                     <MudDivider Light DividerType="DividerType.FullWidth" />
                 </MudItem>
                 <MudItem xs="12" sm="12" md="8" lg="8">
                     <MudGrid Spacing="2">
                     <MudItem xs="12" sm="12" md="6" lg="6">

                     <MudTextField @bind-Value="visitor.Name" Label="Name" Margin="Margin.Dense" Variant="Variant.Outlined" Required RequiredError="Please Enter Full Name"></MudTextField>
                     </MudItem>
              
                 <MudItem xs="12" sm="12" md="6" lg="6">
                     <MudDatePicker Label="DateO Of Birth" @bind-Date="visitor.DBO" Variant="Variant.Outlined" Margin="Margin.Dense" Required RequiredError="Please Delect Date Of Birth"></MudDatePicker>
                 </MudItem>
                 <MudItem xs="12" sm="12" md="6" lg="6">

                     <MudNumericField @bind-Value="visitor.MobileNo" Label="Contact Number" Margin="Margin.Dense" Variant="Variant.Outlined" T="string" MaxLength="10" Adornment="Adornment.Start" AdornmentText="+91" Required RequiredError="Please Enter Contact Number" HideSpinButtons></MudNumericField>

                 </MudItem>
                 <MudItem xs="12" sm="12" md="6" lg="6">

                     <MudTextField @bind-Value="visitor.Email" Label="Email" Margin="Margin.Dense" Variant="Variant.Outlined" Validation="@ValidateEmail" Required RequiredError="Please Enter Email Address"></MudTextField>

                 </MudItem>
                 <MudItem xs="12" sm="12" md="6" lg="6">
                     <MudTextField @bind-Value="visitor.Company" Label="Organigation Name" Variant="Variant.Outlined" Margin="Margin.Dense" Required RequiredError="Please Enter Name Of Organigation"></MudTextField>
                 </MudItem>
                     </MudGrid>
                 </MudItem>
                 <MudItem xs="12" sm="12" md="4" lg="4">
                     <MudFileUpload T="IReadOnlyList<IBrowserFile>" Accept=".png, .jpg, .jpeg" OnFilesChanged="GetImageUrlAsync" @bind-File="visitor.Photograph" Hidden="@false" Required RequiredError="Please Upload Image" InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20" InputStyle="opacity:0">
                        <ButtonTemplate>
                             <MudPaper Outlined="true" Class="relative rounded-lg border-2 border-dashed pa-4 mt-4 mud-width-full mud-height-full z-10">
                                @if (!string.IsNullOrEmpty(imageUrl))
                                {
                                    <MudGrid Justify="Justify.Center">
                                    <MudImage Height="100" Width="100" Src="@imageUrl" ObjectPosition="ObjectPosition.Center"/>
                                    <MudText Color="Color.Success" Class="m-2">File Uploaded!</MudText>
                                    </MudGrid>
                                }
                                else
                                {
                                    <span>Upload Photograph</span>
                                    <MudImage Height="100" Width="100" Src="https://t4.ftcdn.net/jpg/04/81/13/43/360_F_481134373_0W4kg2yKeBRHNEklk4F9UXtGHdub3tYk.jpg" />
                                }
                            </MudPaper>
                        </ButtonTemplate>
                    </MudFileUpload>
                    
                </MudItem>
               
                 <MudItem xs="12" sm="12" md="12" lg="12">
                     <MudText><b>Address type :</b></MudText>
                     <MudDivider Light DividerType="DividerType.FullWidth" />
                 </MudItem>
                 <MudItem xs="12" sm="12" md="12" lg="12">
                     <MudTextField @bind-Value="visitor.Address" Label="Permanent Address" Variant="Variant.Outlined" Margin="Margin.Dense" Lines="2" Required RequiredError="Please Enter Your Addresss"></MudTextField>

                 </MudItem>
                 <MudItem xs="12" sm="12" md="3" lg="3">


                     <MudTextField @bind-Value="visitor.City" Label="City" Variant="Variant.Outlined" Margin="Margin.Dense" Required RequiredError="Enter City Name"></MudTextField>

                 </MudItem>
                 <MudItem xs="12" sm="12" md="3" lg="3">

                     <MudTextField @bind-Value="visitor.State" Label="State" Variant="Variant.Outlined" Margin="Margin.Dense" Required RequiredError="Enter State Name"></MudTextField>

                 </MudItem>
                 <MudItem xs="12" sm="12" md="3" lg="3">

                     <MudTextField @bind-Value="visitor.Country" Label="Country" Variant="Variant.Outlined" Margin="Margin.Dense" Required RequiredError="Enter Country"></MudTextField>

                 </MudItem>
                 <MudItem xs="8" sm="8" md="3" lg="3">

                     <MudTextField @bind-Value="visitor.Pincode" Label="Pincode" Variant="Variant.Outlined" Margin="Margin.Dense" Required RequiredError="Enter Your Pincode"></MudTextField>

                 </MudItem>
                 <MudItem xs="12" sm="12" md="12" lg="12">
                     <MudText><b>Documents :</b></MudText>
                     <MudDivider Light DividerType="DividerType.FullWidth" />
                 </MudItem>
                 <MudItem xs="12" sm="12" md="6" lg="6">
                     <MudAutocomplete T="Tbl_IdentityType" @bind-Value="selectedId" Label="ID Type" SearchFunc="getId" ToStringFunc="@(x => x.IdType)" Variant="Variant.Outlined" Margin="Margin.Dense" Clearable>

                     </MudAutocomplete>
                     @*  <MudSelect @bind-Value="visitormaster.Id_Type" Label="ID Type" Margin="Margin.Dense" Variant="Variant.Outlined" Required RequiredError="Please Select one Documnet">
                    <MudSelectItem Value="@("Aadhar Card")" />
                    <MudSelectItem Value="@("Driving Licence")" />
                    <MudSelectItem Value="@("Voter ID")" />
                    <MudSelectItem Value="@("Pan Card")" />
                    </MudSelect> *@
                 </MudItem>
                 <MudItem xs="12" sm="12" md="6" lg="6">

                     <MudTextField @bind-Value="visitor.Personal_Id" Label="ID Number" Variant="Variant.Outlined" Margin="Margin.Dense" Required RequiredError="Please Enter Id Number"></MudTextField>

                 </MudItem>
                 <MudItem xs="12" sm="12" md="4" lg="4 ">

                     <MudFileUpload T="IReadOnlyList<IBrowserFile>" Accept=".png, .jpg, .jpeg" @bind-File="visitor.Personal_Id" OnFilesChanged="UploadFiles2" Hidden="@false" Required RequiredError="Please Upload Documenet Image" InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20" InputStyle="opacity:0">
                         <ButtonTemplate>
                             <MudPaper Outlined="true" Class="relative rounded-lg border-2 border-dashed pa-4 mt-4 mud-width-full mud-height-full z-10">
                                 @if (!string.IsNullOrEmpty(Documnet))
                                {
                                    <MudGrid Justify="Justify.Center">
                                    <MudImage Height="100" Width="100" Src="@Documnet" />
                                    <MudText Color="Color.Success" Class="m-2">File Uploaded!</MudText>
                                    </MudGrid>
                                }
                                else
                                {
                                    <span>Upload Documnent Image</span>
                                    <MudImage Height="100" Width="100" Src="https://t4.ftcdn.net/jpg/04/81/13/43/360_F_481134373_0W4kg2yKeBRHNEklk4F9UXtGHdub3tYk.jpg" />
                                }
                            </MudPaper>
                        </ButtonTemplate>
                    </MudFileUpload>
                </MudItem>
            </MudGrid>
        </MudForm>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant="Variant.Filled" Color="Color.Success" Style="border-radius:8px;" FullWidth Class="m-4" OnClick="Submit">Submit</MudButton>
     </MudCardActions>
 </MudCard>


 @code {

    Tbl_VisitorMaster visitor = new();
    List<Tbl_VisitorMaster> visitors = new();

    Tbl_IdentityType User = new();
    List<Tbl_IdentityType> Users = new();
   
    Tbl_IdentityType selectedId = new Tbl_IdentityType();

    MudForm form = new();
    public string ValidateEmail(string email)
    {
        if (email != null)
        {
            Regex regex = new Regex("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"); // Regular expression for email validation
            var Result = regex.IsMatch(email);
            if (Result != true)
            {
                return "Invalid Email Address";
            }
        }
        else
        {

            return "Please Enter Email Address";
        }
        return null;
    }

    // public string validateMobile(string mobile)
    // {
    //   var result =
    // }
    protected async override Task OnInitializedAsync()
    {
        Users.Add(new Tbl_IdentityType() { IdType = "Aadhar Card" });
        Users.Add(new Tbl_IdentityType() { IdType = "Voter ID" });
        Users.Add(new Tbl_IdentityType() { IdType = "Driving Licence" });
        Users.Add(new Tbl_IdentityType() { IdType = "Pan Card" });
        Users.Add(new Tbl_IdentityType() { IdType = "Passport" });
    }


    private void Back()
    {
        navigate.NavigateTo("/");
    }

    // private async void UploadFiles1(InputFileChangeEventArgs file)
    // {
    //     foreach(var f in file.GetMultipleFiles())
    //     {
    //         var imageurl = await GetImageUrlAsync(f);
    //         image.Add(imageurl);
    //     }
    //     //TODO upload the files to the server
    // }


    public string Documnet = null;
    private string imageUrl = null;

    private async Task GetImageUrlAsync(InputFileChangeEventArgs files)
    {
        var file = files.GetMultipleFiles().FirstOrDefault();

        if (file != null)
        {
            imageUrl = await GetImageUrlAsync(file);
        }
    }
    private async Task<string> GetImageUrlAsync(IBrowserFile image)
    {
        if (image != null)
        {
            var stream = image.OpenReadStream();
            var buffer = new byte[image.Size];
            await stream.ReadAsync(buffer, 0, (int)image.Size);
            var base64 = Convert.ToBase64String(buffer);
            return $"data:{image.ContentType};base64,{base64}";
        }

        return "";
    }

    private async Task UploadFiles2(InputFileChangeEventArgs files)
    {
        var file = files.GetMultipleFiles().FirstOrDefault();

        if (file != null)
        {
            Documnet = await GetImageUrlAsync(file);
        }
        //TODO upload the files to the server
    }

    public async Task<IEnumerable<Tbl_IdentityType>> getId(String value)
    {
        await Task.Delay(5);
        if (string.IsNullOrEmpty(value))
            return Users;
        return Users.Where(x => x.IdType.Contains(value));

    }

    private async Task Submit()
    {
        await form.Validate();

    }

}
